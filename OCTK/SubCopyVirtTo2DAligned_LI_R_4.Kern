il_ps_2_0
;
;	2D subarray copy for the case when source array is virtualized, destination is not virtualized, and copy regions are aligned to
;	nComponents (dstOrigin[1] MOD nComponents = 0) & (size[1] MOD nComponents) = 0)
; 
;	inputs: 1 (src)
;	outputs: 1 (dst)
;	data type: LONGINT/REAL
;	nComponents: 4 - for the output, 1 - for the input (virtualized)
;	constants: 1 (LONGINT) : [srcOrigin[1]-dstOrigin[1],srcOrigin[0]-dstOrigin[0],dst.Width,dst.physWidth]
;	kernel type: PS
;
dcl_input_position_interp(linear_noperspective) vWinCoord0.xy__ ; origin in the output range
dcl_output_generic o0
dcl_cb cb0[1]
dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float) ; src array

dcl_literal l0, 4, 0, 0, 0

; compute non-virtual position in the input
ftoi r0.xy, vWinCoord0.xy
umul r0.x, r0.x, l0.x ; output position in single-component elements
iadd r0.xy, r0.xy, cb0[0].xy ; input position in single-component elements

; compute linear index in the input
;

; compute 2D virtaul position in the input
;

sample_resource(0)_sampler(0)_aoffimmi(0,0,0) o0.x, r0.xy
sample_resource(0)_sampler(0)_aoffimmi(1,0,0) o0.y, r0.xy
sample_resource(0)_sampler(0)_aoffimmi(2,0,0) o0.z, r0.xy
sample_resource(0)_sampler(0)_aoffimmi(3,0,0) o0.w, r0.xy

end